server:
  port: 8081
  servlet:
    context-path: /technical-test
    session:
      cookie:
        name: TECHNICALTESTAUTH2SESSION
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain
    min-response-size: 32KB
  jetty:
    threads:
      acceptors: 200



logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql: TRACE
    org.hibernate.type.descriptor.sql.BasicBinder: DEBUG

spring:
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      connection-timeout: 20000
      maximum-pool-size: 10
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: ${DB_PLATFORM}
  application:
    name: pin_app

  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  servlet:
    multipart:
      max-file-size: 30MB
      max-request-size: 30MB

  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: cliente-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https:dev-v4bjxe3y3ptnozeq.us.auth0.com

cliente:
  topic-name: cliente-events


management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,loggers,prometheus
  metrics:
    tags:
      application: servicio-gestion-clientes

  endpoint:
    health:
      show-details: always  # Detalles completos en el endpoint de /health
    info:
      app:
        name: Servicio de Gesti√≥n de Clientes
        version: 1.0.0
        description: Microservicio que gestiona clientes y publica eventos en Kafka.
org:
  apache:
    coyote:
      http2:
        Http2Protocol:
          maxConcurrentStreamExecution: 200

